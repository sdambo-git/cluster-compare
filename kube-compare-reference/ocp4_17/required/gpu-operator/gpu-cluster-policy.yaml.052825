apiVersion: nvidia.com/v1
kind: ClusterPolicy
metadata:
  name: gpu-cluster-policy
spec:
  operator:
    defaultRuntime: {{ .spec.operator.defaultRuntime | default "crio" }}
    use_ocp_driver_toolkit: {{ .spec.operator.use_ocp_driver_toolkit | default true }}
    initContainer: {}
    {{- if .spec.operator.runtimeClass }}
    runtimeClass: nvidia
    {{- end }}
  sandboxWorkloads:
    enabled: {{ .spec.sandboxWorkloads.enabled | default false }}
    defaultWorkload: {{ .spec.sandboxWorkloads.defaultWorkload | default "container" }}
  driver:
    enabled: {{ .spec.driver.enabled | default true }}
    useNvidiaDriverCRD: {{ .spec.driver.useNvidiaDriverCRD | default false }}
    useOpenKernelModules: false
    upgradePolicy:
      autoUpgrade: {{ .spec.driver.upgradePolicy.autoUpgrade | default true }}
      drain:
        deleteEmptyDir: {{ .spec.driver.upgradePolicy.drain.deleteEmptyDir | default false }}
        enable: {{ .spec.driver.upgradePolicy.drain.enable | default false }}
        force: {{ .spec.driver.upgradePolicy.drain.force | default false }}
        timeoutSeconds: {{ .spec.driver.upgradePolicy.drain.timeoutSeconds | default 300 }}
      {{- if .spec.driver.kernelModuleType }}  
      kernelModuleType: auto
      {{- end }}
      maxParallelUpgrades: {{ .spec.driver.upgradePolicy.maxParallelUpgrades | default 1 }}
      maxUnavailable: {{ .spec.driver.upgradePolicy.maxUnavailable | default "25%" }}
      podDeletion:
        deleteEmptyDir: {{ .spec.driver.upgradePolicy.podDeletion.deleteEmptyDir | default false }}
        force: {{ .spec.driver.upgradePolicy.podDeletion.force | default false }}
        timeoutSeconds: {{ .spec.driver.upgradePolicy.podDeletion.timeoutSeconds | default 300 }}
      waitForCompletion:
        timeoutSeconds: {{ .spec.driver.upgradePolicy.waitForCompletion.timeoutSeconds | default 0 }}
    repoConfig:
      configMapName: {{ .spec.driver.repoConfig.configMapName | default "" | quote }}
    certConfig:
      name: {{ .spec.driver.certConfig.name | default "" | quote }}
    licensingConfig:
      nlsEnabled: {{ .spec.driver.licensingConfig.nlsEnabled | default true }}
      configMapName: {{ .spec.driver.licensingConfig.configMapName | default "" | quote }}
    virtualTopology:
      config: {{ .spec.driver.virtualTopology.config | default "" | quote }}
    kernelModuleConfig:
      name: {{ .spec.driver.kernelModuleConfig.name | default "" | quote }}
  dcgmExporter:
    enabled: {{ .spec.dcgmExporter.enabled | default true }}
    config:
      name: {{ .spec.dcgmExporter.config.name | default "" | quote }}
    serviceMonitor:
      enabled: {{ .spec.dcgmExporter.serviceMonitor.enabled | default true }}
  dcgm:
    enabled: {{ .spec.dcgm.enabled | default true }}
  daemonsets:
    updateStrategy: {{ .spec.daemonsets.updateStrategy | default "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .spec.daemonsets.rollingUpdate.maxUnavailable | default "1" | quote }}
  devicePlugin:
    enabled: {{ .spec.devicePlugin.enabled | default true }}
    config:
      name: {{ .spec.devicePlugin.config.name | default "" | quote }}
      default: {{ .spec.devicePlugin.config.default | default "" | quote }}
    mps:
      root: {{ .spec.devicePlugin.mps.root | default "/run/nvidia/mps" }}
  gfd:
    enabled: {{ .spec.gfd.enabled | default true }}
  migManager:
    enabled: {{ .spec.migManager.enabled | default true }}
  nodeStatusExporter:
    enabled: {{ .spec.nodeStatusExporter.enabled | default true }}
  mig:
    strategy: single
  toolkit:
    enabled: {{ .spec.toolkit.enabled | default true }}
    {{- if .spec.toolkit.installDir }}
    installDir: /usr/local/nvidia
    {{- end }}
  validator:
    plugin:
      env:
        {{- if .spec.validator.plugin.env }}
        {{ .spec.validator.plugin.env | toYaml | nindent 8 }}
        {{- else }}
        - name: WITH_WORKLOAD
          value: "false"
        {{- end }}
  vgpuManager:
    enabled: {{ .spec.vgpuManager.enabled | default false }}
  vgpuDeviceManager:
    enabled: {{ .spec.vgpuDeviceManager.enabled | default true }}
  sandboxDevicePlugin:
    enabled: {{ .spec.sandboxDevicePlugin.enabled | default true }}
  vfioManager:
    enabled: {{ .spec.vfioManager.enabled | default true }}
  gds:
    enabled: {{ .spec.gds.enabled | default false }}
  gdrcopy:
    enabled: {{ .spec.gdrcopy.enabled | default false }}
